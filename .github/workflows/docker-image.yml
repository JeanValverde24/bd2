name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t bitacora-app ./Bitacora
        docker tag bitacora-app jhonnyarm/bitacora-app
        docker push jhonnyarm/bitacora-app
      working-directory: ./

    - name: Install jq for JSON processing
      run: sudo apt-get install jq

    - name: Test GET /api/Cliente
      run: |
        curl --request GET \
          --url http://161.132.37.246:5000/api/Cliente \
          --fail --silent --show-error

    - name: Test POST /api/Cliente to create a new user
      run: |
        response=$(curl -s -o response.json -w "%{http_code}" --request POST \
          --url http://161.132.37.246:5000/api/Cliente \
          --header 'Content-Type: application/json' \
          --data @new-user-data.json)
        
        cat response.json
        if [ "$response" -ne "201" ]; then
          echo "Failed to create a new user"
          echo "Response HTTP Status: $response"
          exit 1
        else
          echo "New user created successfully"
          userId=$(jq '.id' response.json)
          echo "New User ID: $userId"
        fi

    - name: Test DELETE /api/Cliente to delete the user
      run: |
        # Ensure the user ID is not empty or null
        if [ -z "$userId" ] || [ "$userId" == "null" ]; then
          echo "User ID is empty or null"
          exit 1
        fi
        
        response=$(curl -s -o /dev/null -w "%{http_code}" --request DELETE \
          --url http://161.132.37.246:5000/api/Cliente/$userId)

        if [ "$response" -ne "204" ]; then
          echo "Failed to delete user"
          echo "Response HTTP Status: $response"
          exit 1
        else
          echo "User deleted successfully"
        fi
      env:
        userId: ${{ steps.create_user.outputs.userId }}

